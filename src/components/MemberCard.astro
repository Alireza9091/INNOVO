---
interface Props {
  name: string;
  experience: string[];
  image: string;
  linkedin?: string;
}
const { name, experience, image, linkedin = "" }: Props = Astro.props;
---

<div
  class="items-center bg-gray-50 rounded-lg shadow sm:flex dark:bg-gray-800 dark:border-gray-700"
>
  <a href="#">
    <div class="w-64">
      <img
        class="w-full h-full rounded-lg sm:rounded-none sm:rounded-l-lg"
        src={image}
        alt={name}
      />
    </div>
  </a>
  <div class="p-5">
    <h3 class="text-xl font-bold tracking-tight text-gray-900 dark:text-white">
      <p>{name}</p>
    </h3>
    <ul
      class="mt-3 mb-4 list-none font-light text-gray-500 dark:text-gray-400"
    >
      {experience.map((exp) => <li class=" mb-4">{exp}</li>)}
    </ul>
    <ul class="flex space-x-4 sm:mt-0">
      <li>
        { linkedin && <a
          href={linkedin}
          target="_blank"
          class="text-gray-500 hover:text-blue-800 dark:hover:text-white"
        >
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="M19 3a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14m-.5 15.5v-5.3a3.26 3.26 0 0 0-3.26-3.26c-.85 0-1.84.52-2.32 1.3v-1.11h-2.79v8.37h2.79v-4.93c0-.77.62-1.4 1.39-1.4a1.4 1.4 0 0 1 1.4 1.4v4.93h2.79M6.88 8.56a1.68 1.68 0 0 0 1.68-1.68c0-.93-.75-1.69-1.68-1.69a1.69 1.69 0 0 0-1.69 1.69c0 .93.76 1.68 1.69 1.68m1.39 9.94v-8.37H5.5v8.37h2.77Z"/>
        </svg>
        </a>}
      </li>
    </ul>
  </div>
</div>
